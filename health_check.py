#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π HTTP —Å–µ—Ä–≤–µ—Ä –¥–ª—è health checks Render
"""
import http.server
import socketserver
import os
import threading
import time

class HealthCheckHandler(http.server.BaseHTTPRequestHandler):
    def do_GET(self):
        if self.path == '/':
            self.send_response(200)
            self.send_header('Content-type', 'text/html')
            self.end_headers()
            response = """
            <html>
            <head><title>BabyCareBot Health Check</title></head>
            <body>
                <h1>üçº BabyCareBot</h1>
                <p>Status: ‚úÖ Running</p>
                <p>Time: {}</p>
                <p>Bot is working in background</p>
            </body>
            </html>
            """.format(time.strftime('%Y-%m-%d %H:%M:%S'))
            self.wfile.write(response.encode())
        elif self.path == '/health':
            self.send_response(200)
            self.send_header('Content-type', 'application/json')
            self.end_headers()
            response = '{"status": "healthy", "service": "babycare-bot"}'
            self.wfile.write(response.encode())
        else:
            self.send_response(404)
            self.end_headers()

def start_health_server(port=8000):
    """–ó–∞–ø—É—Å–∫ HTTP —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è health checks"""
    try:
        with socketserver.TCPServer(("", port), HealthCheckHandler) as httpd:
            print(f"üåê Health check server started on port {port}")
            httpd.serve_forever()
    except Exception as e:
        print(f"‚ùå Health check server error: {e}")

def run_health_server():
    """–ó–∞–ø—É—Å–∫ health —Å–µ—Ä–≤–µ—Ä–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
    health_thread = threading.Thread(target=start_health_server, daemon=True)
    health_thread.start()
    return health_thread

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º health —Å–µ—Ä–≤–µ—Ä
    health_thread = run_health_server()
    
    # –ò–º–∏—Ç–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞ (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
    try:
        while True:
            print("ü§ñ Bot is running... (Press Ctrl+C to stop)")
            time.sleep(60)
    except KeyboardInterrupt:
        print("\nüõë Bot stopped")
